buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.4.2.RELEASE")
    }
}

plugins {
    id 'java'
    id 'application'
    id 'maven'
    id "org.springframework.boot" version "2.1.0.RELEASE"
    
}
group = 'com.ocularminds.eduzie'
version = '0.0.1'

apply plugin: 'io.spring.dependency-management'
apply plugin: 'java'
apply plugin: "org.springframework.boot"

sourceCompatibility = 1.8
targetCompatibility = 1.8
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

repositories {        
    maven { url "http://repo.maven.apache.org/maven2" }
    flatDir {
        dirs 'lib'
    }
}

dependencies {    
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-undertow', version:'2.1.0.RELEASE'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-security', version:'2.1.0.RELEASE'
    compile(group: 'org.springframework.boot', name: 'spring-boot-starter-web', version:'2.1.0.RELEASE') {
        exclude(module: 'spring-boot-starter-tomcat')
    }
    compile group: 'org.springframework', name: 'spring-test', version:'5.0.4.RELEASE'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.0'
    testCompile("org.springframework.boot:spring-boot-starter-test");
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.5'
    
    }
    mainClassName = 'com.ocularminds.eduzie.App'
    jar.enabled = true

    bootRun {
        main = 'com.ocularminds.eduzie.App'
    }
        [bootJar, distTar, bootDistTar, bootDistZip]*.enabled = true
    configurations.archives.artifacts.removeIf { !it.type.is(distZip) }

    clean.doFirst {
        delete "${rootDir}"+File.separator+"target"+File.separator
        delete "${rootDir}"+File.separator+"icard.log"+File.separator
        delete "${rootDir}"+File.separator+"target"+File.separator
    }

    task copyJar(){
        dependsOn build
        println 'Copying jar file to project root directory...'
        doLast{
            copy{
                from new File("${project.buildDir}/libs")
                into new File("${project.projectDir}")
                rename { String fileName -> fileName.replace("eduzie-0.0.1", "eduzie")}
            }
        }
    }

    test{
        ignoreFailures = true
        testLogging.showStandardStreams = true
    }

    build.finalizedBy copyJar
